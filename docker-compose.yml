services:
  database:
    profiles: ["local"]
    image: postgres
    container_name: postgres
    restart: unless-stopped
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./.env.local
  local:
    profiles: ["local"]
    build:
      context: .
      target: deps
    command: npm run start:local
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "1"
      TS_NODE_TRANSPILE_ONLY: "1"
    volumes:
      - ./:/app:delegated
      - /app/node_modules
    env_file:
      - ./.env.local
    depends_on:
      - database
  tst:
    profiles: ["tst"]
    build:
      context: .
      target: deps
    command: npm run start:tst
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "1"
      TS_NODE_TRANSPILE_ONLY: "1"
    volumes:
      - ./:/app:delegated
      - /app/node_modules
    env_file:
      - ./.env.tst
  hlg:
    profiles: ["hlg"]
    build:
      context: .
      target: deps
    command: npm run start:hlg
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "1"
      TS_NODE_TRANSPILE_ONLY: "1"
    volumes:
      - ./:/app:delegated
      - /app/node_modules
    env_file:
      - ./.env.hlg

volumes:
  postgres_data:
