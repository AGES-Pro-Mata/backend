x-api-common: &api-common
  build:
    context: .
    dockerfile: Dockerfile
  working_dir: /app
  ports:
    - "3000:3000"
  environment:
    NODE_ENV: development
    CHOKIDAR_USEPOLLING: "true"
    WATCHPACK_POLLING: "true"
  command: sh -c "npx prisma generate && npm run start:dev"
  volumes:
    - ./:/app
    - node_modules:/app/node_modules

services:
  api-local:
    <<: *api-common
    profiles: ["local"]
    env_file:
      - .env.local
    environment:
      BACKEND_ENV: local
    depends_on:
      database:
        condition: service_healthy
    networks:
      - backend-net

  database:
    image: postgres
    profiles: ["local"]
    ports:
      - "${DATABASE_PORT}:5432"
    environment:
      POSTGRES_DB: ${DATABASE_DB}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - backend-net

  api-tst:
    <<: *api-common
    profiles: ["tst"]
    env_file:
      - .env.tst
    environment:
      BACKEND_ENV: tst

  api-hlg:
    <<: *api-common
    profiles: ["hlg"]
    env_file:
      - .env.hlg
    environment:
      BACKEND_ENV: hlg

volumes:
  node_modules:
  pgdata:

networks:
  backend-net:
    driver: bridge
