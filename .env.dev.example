# Docker Configuration - Backend
DOCKER_REGISTRY=docker.io
IMAGE_NAME=norohim/pro-mata-backend-dev
IMAGE_TAG=latest
CONTAINER_NAME=promata-dev-backend

# Backend Configuration
NODE_ENV=development
BACKEND_PORT=3010
PORT=3010

# Database Configuration
POSTGRES_DB=promata
POSTGRES_USER=promata
POSTGRES_PASSWORD=promata123postgres
DATABASE_PORT_MAPPING=5431:5432

# Database URL (internal connection for backend - dentro do Docker)
# IMPORTANTE: Use 'database:5432' para conexão interna do Docker
# NÃO use 'host.docker.internal' ou 'localhost'
DATABASE_URL=postgresql://promata:promata123postgres@database:5432/promata

# JWT Configuration
JWT_SECRET=dev-jwt-secret-change-in-production-256-bits-minimum
JWT_EXPIRES_IN=24h

# AWS S3 Configuration
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_S3_REGION=us-east-1
AWS_S3_BUCKET=your-bucket-name

# Analytics (optional for dev)
UMAMI_URL=
UMAMI_WEBSITE_ID=

# CORS Configuration
# ATENÇÃO: Permite requisições de QUALQUER origem em ambiente dev
# Isso é seguro APENAS para ambiente de desenvolvimento/testes
# NUNCA use "true" em produção!
ALLOW_ALL_ORIGINS=true

# ==========================================
# ACESSO EXTERNO (para frontend/testes)
# ==========================================
# Esta é uma stack de teste ISOLADA para desenvolvedores frontend
#
# Backend API: http://<SEU-SERVIDOR>:3010
# - Swagger/API Docs: http://<SEU-SERVIDOR>:3010/api
# - Health Check: http://<SEU-SERVIDOR>:3010/health
#
# Database: postgres://promata:promata123postgres@<SEU-SERVIDOR>:5431/promata
# - Prisma Studio: http://<SEU-SERVIDOR>:5556
#
# CORS já está configurado para aceitar:
# - localhost:* (qualquer porta local)
# - IPs privados (192.168.*.*)
# - Requisições sem origin (Postman, mobile apps)
#
# Veja DEV-ACCESS.md para detalhes completos e exemplos de integração
