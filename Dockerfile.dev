# Dockerfile.dev - Ambiente de desenvolvimento
FROM node:24-alpine

# Instalar dependências do sistema
RUN apk add --no-cache openssl libc6-compat

# Definir diretório de trabalho
WORKDIR /app

# Definir variáveis de ambiente para desenvolvimento
ENV NODE_ENV=development
ENV CHOKIDAR_USEPOLLING=true

# Copiar package.json e package-lock.json
COPY package*.json ./

# Copiar schema do Prisma
COPY prisma ./prisma/

# Instalar dependências
RUN npm ci

# Gerar cliente Prisma
RUN npx prisma generate

# Verificar se foi gerado
RUN ls -la generated/ || echo "Generated folder not found"

# Copiar código fonte
COPY . .

# Copiar entrypoint DEV que roda migrations + seed automaticamente
COPY docker-entrypoint-dev.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint-dev.sh

# Expor porta
EXPOSE 3000

# Criar usuário não-root por segurança e ajustar permissões
RUN addgroup -g 1001 -S nodejs \
  && adduser -S nestjs -u 1001 \
  && chown -R nestjs:nodejs /app

# Mudar para usuário não-root
USER nestjs

# Entrypoint roda migrations, seed (se necessário) e inicia app
ENTRYPOINT ["docker-entrypoint-dev.sh"]